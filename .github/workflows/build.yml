name: Build

on: [ push ]

jobs:
  build-apk:
    runs-on: ubuntu-20.04
    steps:
      - name: ⬆️ Checkout
        uses: actions/checkout@v2
      - name: 🔧 Setup java
        uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "beta" # or: 'stable' or 'dev'
      - name: ✅ Enable platforms
        run: flutter config --enable-web
      - name: 📦 Get dependencies
        working-directory: app
        run: flutter pub get
      #- run: flutter test
      - name: 🏭 Build
        working-directory: app
        run: |
          flutter doctor -v
          flutter build apk -v --release
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: apk-build
          path: app/build/app/outputs/flutter-apk/app-release.apk
  build-windows:
    runs-on: windows-latest
    steps:
      - name: ⬆️ Checkout
        uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "beta" # or: 'stable' or 'dev'
      - name: ✅ Enable platforms
        run: flutter config --enable-windows-desktop
      - name: 📦 Get dependencies
        working-directory: app
        run: flutter pub get
      - name: 🏭 Build
        working-directory: app
        run: |
          flutter clean
          flutter doctor -v
          flutter build windows -v --release
          flutter pub run msix:create
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: windows-build
          path: |
            app/build/windows/runner/Release/**
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: ⬆️ Checkout
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev
      - uses: subosito/flutter-action@v1
        with:
          channel: "dev" # or: 'stable' or 'dev'
      - name: ✅ Enable platforms
        run: flutter config --enable-linux-desktop
      - name: 📦 Get dependencies
        working-directory: app
        run: flutter pub get
      - name: 🏭 Build
        working-directory: app
        run: |
          flutter clean
          flutter doctor -v
          flutter build linux -v --release
          chmod +x build/linux/x64/release/bundle/app
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: |
            app/build/linux/x64/release/bundle/**
  build-server:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        include:
          - os: ubuntu-latest
            output-name: server-linux
          - os: macOS-latest
            output-name: server-mac
          - os: windows-latest
            output-name: server-windows.exe
    steps:
      - uses: actions/checkout@v2
      - uses: DanTup/gh-actions/setup-dart@master
      - name: Build server
        working-directory: server
        run: |
          mkdir build
          pub get
          dart compile exe bin/flow_server.dart -v -o build/${{ matrix.output-name }}
      - uses: actions/upload-artifact@v2
        with:
          name: server-executables
          path: server/build
  #build-macos:
  #  runs-on: macos-latest
  #  steps:
  #    - name: ⬆️ Checkout
  #      uses: actions/checkout@v2
  #    - uses: subosito/flutter-action@v1
  #      with:
  #        channel: "dev" # or: 'stable' or 'dev'
  #    - name: ✅ Enable platforms
  #      run: flutter config --enable-macos-desktop
  #    - name: 📦 Get dependencies
  #      run: |
  #        flutter pub get
  #    - name: 🏭 Build
  #      run: |
  #        flutter clean
  #        flutter doctor -v
  #        flutter build macos -v
  #    - name: Archive
  #      uses: actions/upload-artifact@v2
  #      with:
  #        name: macos-build
  #        path: |
  #          build/windows/runner/Release/**
  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build-apk
      - build-windows
      - build-linux
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: apk-build
      - uses: actions/download-artifact@v2
        with:
          name: windows-build
          path: windows-build/
      - uses: actions/download-artifact@v2
        with:
          name: linux-build
          path: linux-build/
      - uses: actions/download-artifact@v2
        with:
          name: server-executables
          path: server-executables/
      - name: 📦 Zip artifacts
        run: |
          zip -r windows.zip windows-build/*
          zip -r linux.zip linux-build/*
      - name: 🚀 Deploy release
        uses: eine/tip@master
        if: github.ref == 'refs/heads/main'
        with:
          tag: release
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            app-release.apk
            windows.zip
            linux.zip
            server-executables/server-linux
            server-executables/server-mac
            server-executables/server-windows.exe
      - name: 🚀 Deploy preview
        uses: eine/tip@master
        if: github.ref == 'refs/heads/develop'
        with:
          tag: preview
          token: ${{ secrets.GITHUB_TOKEN }}
          rm: true
          files: |
            app-release.apk
            windows.zip
            linux.zip
            server-executables/server-linux
            server-executables/server-mac
            server-executables/server-windows.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            app-release.apk
            windows.zip
            linux.zip
            server-executables/server-linux
            server-executables/server-mac
            server-executables/server-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
